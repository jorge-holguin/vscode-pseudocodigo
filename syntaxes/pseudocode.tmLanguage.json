{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Pseudocode",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#meta"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#bools"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#storage"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.pseudocode",
					"match": "\\/\\/.*"
				},
				{
					"name": "comment.block.pseudocode",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.pseudocode",
					"match": "(?i)\\b(si|sino|intentar|capturar|escribir|imprimir|leer|mientras|para|paracada|repetir|proceso|funcion|clase|estructura|mod|y|o|no|retornar|romper|continuar|extends|estatico|publico|privado|caso|hacer|fin)\\b"
				},
				{
					"name": "keyword.operator.logical.pseudocode",
					"match": "(?i)\\b(y|o|no|!|&&|\\|\\|)\\b"
				},
				{
					"name": "keyword.declaration.function.pseudocode",
					"match": "(?i)\\b(funcion|proceso)\\b"
				},
				{
					"name": "keyword.declaration.class.pseudocode",
					"match": "(?i)\\bclase\\b"
				},
				{
					"name": "keyword.declaration.struct.pseudocode",
					"match": "(?i)\\bestructura\\b"
				},
				{
					"name": "meta.function-call.pseudocode",
					"match": "([a-zA-Z_][a-zA-Z0-9_]*)(?= *\\(.*?\\))",
					"captures": {
						"1": {
							"name": "entity.name.function.pseudocode"
						}
					}
				}
			]
		},
		"meta": {
			"patterns": [
				{
					"name": "meta.function.pseudocode",
					"begin": "(?i)\\b(estatico |privado |publico )?((funcion|proceso)) ([a-zA-Z_][a-zA-Z0-9_]*)\\(((.*?))\\) *(?:\\{|(hacer))",
					"end": "(?i)(?:\\}|(fin))",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.pseudocode"
						},
						"2": {
							"name": "keyword.declaration.function.pseudocode"
						},
						"3": {
							"name": "storage.type.function.pseudocode"
						},
						"4": {
							"name": "entity.name.function.pseudocode"
						},
						"5": {
							"name": "meta.parameters.pseudocode"
						},
						"6": {
							"name": "variable.parameter.pseudocode"
						},
						"7": {
							"name": "keyword.control.pseudocode"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword.control.pseudocode"
						}
					},
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#meta"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#entities"
						},
						{
							"include": "#storage"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#variables"
						},
						{
							"include": "#numbers"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#bools"
						}
					]
				},
				{
					"name": "meta.class.pseudocode",
					"begin": "(?i)\\b(estatico |privado |publico )?((clase)) ([a-zA-Z_][a-zA-Z0-9_]*) *(?:(extiende) *([a-zA-Z_][a-zA-Z0-9_]*))? *(?:\\{|(hacer))",
					"end": "(?i)(?:\\}|(fin))",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.pseudocode"
						},
						"2": {
							"name": "keyword.declaration.class.pseudocode"
						},
						"3": {
							"name": "storage.type.class.pseudocode"
						},
						"4": {
							"name": "entity.name.type.class.pseudocode"
						},
						"5": {
							"name": "storage.modifier.pseudocode"
						},
						"6": {
							"name": "entity.other.inherited-class.pseudocode"
						},
						"7": {
							"name": "keyword.control.pseudocode"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword.control.pseudocode"
						}
					},
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#meta"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#entities"
						},
						{
							"include": "#storage"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#variables"
						},
						{
							"include": "#numbers"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#bools"
						}
					]
				},
				{
					"name": "meta.struct.pseudocode",
					"begin": "(?i)\\b(estatico |privado |publico )?((estructura)) ([a-zA-Z_][a-zA-Z0-9_]*) *(?:\\{|(hacer))",
					"end": "(?i)(?:\\}|(fin))",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.pseudocode"
						},
						"2": {
							"name": "keyword.declaration.struct.pseudocode"
						},
						"3": {
							"name": "storage.type.struct.pseudocode"
						},
						"4": {
							"name": "entity.name.type.struct.pseudocode"
						},
						"5": {
							"name": "storage.modifier.pseudocode"
						},
						"6": {
							"name": "keyword.control.pseudocode"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword.control.pseudocode"
						}
					},
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#meta"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#entities"
						},
						{
							"include": "#storage"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#variables"
						},
						{
							"include": "#numbers"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#bools"
						}
					]
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.type.function.pseudocode",
					"match": "(?i)\\b(funcion|proceso)\\b"
				},
				{
					"name": "storage.type.class.pseudocode",
					"match": "(?i)\\bclase\\b"
				},
				{
					"name": "storage.type.struct.pseudocode",
					"match": "(?i)\\bestructura\\b"
				},
				{
					"name": "storage.modifier.pseudocode",
					"match": "(?i)\\bextiende\\b"
				},
				{
					"name": "storage.modifier.pseudocode",
					"match": "(?i)\\bestatico\\b"
				},
				{
					"name": "storage.modifier.pseudocode",
					"match": "(?i)\\bpublico\\b"
				},
				{
					"name": "storage.modifier.pseudocode",
					"match": "(?i)\\bprivado\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.pseudocode",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.pseudocode",
					"match": "\\\\."
				},
				{
					"name": "string.template.pseudocode",
					"begin": "(\\$\\{)((.*?))(?=\\})",
					"end": "(\\})",	
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.template-expression.begin.pseudocode"
						},
						"2": {
							"name": "meta.template.expression.pseudocode"
						},
						"3": {
							"name": "meta.embedded.line.pseudocode",
							"patterns": [
								{ "include": "#meta" },
								{ "include": "#entities" },
								{ "include": "#storage" },
								{ "include": "#variables" },
								{ "include": "#strings" },
								{ "include": "#numbers" },
								{ "include": "#punctuation" }
							]
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.template-expression.end.pseudocode"
						}
					},
					"patterns": [
						{ "include": "#meta" },
						{ "include": "#entities" },
						{ "include": "#storage" },
						{ "include": "#variables" },
						{ "include": "#strings" },
						{ "include": "#numbers" },
						{ "include": "#punctuation" }
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.integer.pseudocode",
					"match": "\\b[0-9]+(?![0-9]*\\.)\\b"
				},
				{
					"name": "constant.numeric.float.pseudocode",
					"match": "\\b[0-9]+\\.[0-9]+\\b"
				}
			]
		},
		"bools": {
			"patterns": [{
				"name": "constant.language.pesudocode",
				"match": "(?i)\\b(verdadero|falso|null)\\b"
			}]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.function.pseudocode",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?= *\\()\\b"
				},
				{
					"name": "variable.other.pseudocode",
					"match": "[a-zA-Z_][a-zA-Z0-9_]*"
				},
				{
					"name": "variable.parameter.pseudocode",
					"match": "(?i)(?<=funcion [a-zA-Z0-9_]\\().*?(?=\\))"
				},
				{
					"name": "variable.parameter.pseudocode",
					"match": "(?i)(?<=proceso [a-zA-Z0-9_]\\().*?(?=\\))"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "entity.name.function.pseudocode",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?= *\\()\\b"
				},
				{
					"name": "entity.name.class.pseudocode",
					"match": "(?i)\\b(?<=clase )[a-zA-Z_][a-zA-Z0-9_]*(?= *\\()\\b"
				},
				{
					"name": "entity.name.struct.pseudocode",
					"match": "(?i)\\b(?<=estructura )[a-zA-Z_][a-zA-Z0-9_]*(?= *\\()\\b"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
					"name": "punctuation.separator.pseudocode",
					"match": ","
				},
				{
					"name": "punctuation.terminator.pseudocode",
					"match": ";"
				},
				{
					"name": "punctuation.accessor.pseudocode",
					"match": "\\."
				}
			]
		}
	},
	"scopeName": "source.pseudo"
}
